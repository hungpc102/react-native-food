{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { FIREBASE_AUTH } from \"./FirebaseConfig\";\nvar auth = FIREBASE_AUTH;\nexport var signIn = function () {\n  var _ref = _asyncToGenerator(function* (email, password) {\n    try {\n      var userCredential = yield signInWithEmailAndPassword(auth, email, password);\n      return userCredential;\n    } catch (error) {\n      throw error;\n    }\n  });\n  return function signIn(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var signUp = function () {\n  var _ref2 = _asyncToGenerator(function* (email, password) {\n    try {\n      var userCredential = yield createUserWithEmailAndPassword(auth, email, password);\n      return userCredential;\n    } catch (error) {\n      throw error;\n    }\n  });\n  return function signUp(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","FIREBASE_AUTH","auth","signIn","_ref","_asyncToGenerator","email","password","userCredential","error","_x","_x2","apply","arguments","signUp","_ref2","_x3","_x4"],"sources":["/Users/chuduchung/Documents/doan-reactnative/react-native-app/react-native-food/services/Auth.ts"],"sourcesContent":["import { Auth, UserCredential, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { FIREBASE_AUTH } from './FirebaseConfig';\n\n\nconst auth: Auth = FIREBASE_AUTH;\n\nexport const signIn = async (email: string, password: string): Promise<UserCredential> => {\n  try {\n    const userCredential: UserCredential = await signInWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    return userCredential;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\n\nexport const signUp = async (email: string, password: string): Promise<UserCredential> => {\n  try {\n    const userCredential: UserCredential = await createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    return userCredential;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"mappings":";AAAA,SAA+BA,8BAA8B,EAAEC,0BAA0B,QAAQ,eAAe;AAChH,SAASC,aAAa;AAGtB,IAAMC,IAAU,GAAGD,aAAa;AAEhC,OAAO,IAAME,MAAM;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAa,EAAEC,QAAgB,EAA8B;IACxF,IAAI;MACF,IAAMC,cAA8B,SAASR,0BAA0B,CACrEE,IAAI,EACJI,KAAK,EACLC,QACF,CAAC;MACD,OAAOC,cAAc;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAXYN,MAAMA,CAAAO,EAAA,EAAAC,GAAA;IAAA,OAAAP,IAAA,CAAAQ,KAAA,OAAAC,SAAA;EAAA;AAAA,GAWlB;AAID,OAAO,IAAMC,MAAM;EAAA,IAAAC,KAAA,GAAAV,iBAAA,CAAG,WAAOC,KAAa,EAAEC,QAAgB,EAA8B;IACxF,IAAI;MACF,IAAMC,cAA8B,SAAST,8BAA8B,CACzEG,IAAI,EACJI,KAAK,EACLC,QACF,CAAC;MACD,OAAOC,cAAc;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAXYK,MAAMA,CAAAE,GAAA,EAAAC,GAAA;IAAA,OAAAF,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAWlB"},"metadata":{},"sourceType":"module","externalDependencies":[]}