{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport { saveTokensToStorage, saveLoginStatusToStorage, saveUserIdToStorage } from \"../../utils/TokenStorage\";\nimport { userApiLogin, apiProtectedRoute } from \"../../api/UserAPI\";\nexport function routeLogin(_x, _x2, _x3) {\n  return _routeLogin.apply(this, arguments);\n}\nfunction _routeLogin() {\n  _routeLogin = _asyncToGenerator(function* (accessToken, navigation, redirectTo) {\n    try {\n      var protectedResponse = yield axios.post(apiProtectedRoute, {}, {\n        headers: {\n          Authorization: 'Bearer ' + accessToken\n        }\n      });\n      var userId = protectedResponse.data.userId;\n      if (protectedResponse.data.role === 'restaurant') {\n        var userIdString = JSON.stringify(userId);\n        yield saveUserIdToStorage(userIdString);\n        navigation.navigate('Restaurant');\n      }\n      if (protectedResponse.data.role === 'user') {\n        var _userIdString = JSON.stringify(userId);\n        yield saveUserIdToStorage(_userIdString);\n        navigation.navigate(redirectTo);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  });\n  return _routeLogin.apply(this, arguments);\n}\nfunction handleLoginError(error) {\n  if (error.response) {\n    var _error$response = error.response,\n      status = _error$response.status,\n      data = _error$response.data;\n    if (status === 400) {\n      var errorMessage = data.error || 'Dữ liệu không hợp lệ';\n      alert(errorMessage);\n    } else if (status === 401) {\n      var _errorMessage = data.error || 'Thông tin đăng nhập chưa chính xác';\n      alert(_errorMessage);\n    } else if (status === 404) {\n      var _errorMessage2 = data.error || 'Người dùng chưa đăng kí';\n      alert(_errorMessage2);\n    } else {\n      alert('Lỗi đăng nhập: ' + error.message);\n    }\n  } else {\n    alert('Lỗi đăng nhập: ' + error.message);\n  }\n}\nexport var login = function () {\n  var _ref = _asyncToGenerator(function* (email, password, isChecked, setLoading, navigation, user) {\n    setLoading(true);\n    if (!email || !password) {\n      setLoading(false);\n      alert('Vui lòng điền đầy đủ thông tin.');\n      return;\n    }\n    try {\n      var response = yield axios.post(userApiLogin, user);\n      var accessToken = response.data.accessToken;\n      var refreshToken = response.data.refreshToken;\n      if (accessToken && refreshToken) {\n        yield saveTokensToStorage(accessToken, refreshToken);\n        if (isChecked === true) {\n          yield saveLoginStatusToStorage('true');\n        }\n        var redirectTo = 'HomePage1';\n        yield routeLogin(accessToken, navigation, redirectTo);\n      } else {\n        alert('Có lỗi xảy ra. Vui lòng thử lại');\n      }\n    } catch (error) {\n      handleLoginError(error);\n    } finally {\n      setLoading(false);\n    }\n  });\n  return function login(_x4, _x5, _x6, _x7, _x8, _x9) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","saveTokensToStorage","saveLoginStatusToStorage","saveUserIdToStorage","userApiLogin","apiProtectedRoute","routeLogin","_x","_x2","_x3","_routeLogin","apply","arguments","_asyncToGenerator","accessToken","navigation","redirectTo","protectedResponse","post","headers","Authorization","userId","data","role","userIdString","JSON","stringify","navigate","error","console","log","message","handleLoginError","response","_error$response","status","errorMessage","alert","login","_ref","email","password","isChecked","setLoading","user","refreshToken","_x4","_x5","_x6","_x7","_x8","_x9"],"sources":["/Users/chuduchung/Documents/doan-reactnative/react-native-app/react-native-food/services/userService.tsx/loginFunctions.tsx"],"sourcesContent":["import axios from 'axios';\nimport { saveTokensToStorage, saveLoginStatusToStorage , saveUserIdToStorage} from '../../utils/TokenStorage';\nimport { userApiLogin, apiProtectedRoute } from '../../api/UserAPI';\n\nexport async function routeLogin(accessToken:any,  navigation:any, redirectTo:string) {\n  try {\n    const protectedResponse = await axios.post(apiProtectedRoute, {}, {\n      headers: {\n        Authorization: 'Bearer ' + accessToken,\n      },\n    });\n    const userId =protectedResponse.data.userId\n    if (protectedResponse.data.role === 'restaurant') {\n      const userIdString = JSON.stringify(userId)\n      await saveUserIdToStorage(userIdString)\n      navigation.navigate('Restaurant');\n    }\n    if(protectedResponse.data.role === 'user') {\n      const userIdString = JSON.stringify(userId)\n      await saveUserIdToStorage(userIdString)\n      navigation.navigate(redirectTo);\n    }\n  } catch(error:any) {\n    \n    console.log(error.message);\n  }\n\n}\n\nfunction handleLoginError(error:any) {\n\n  if (error.response) {\n    const { status, data } = error.response;\n    if (status === 400) {\n      const errorMessage = data.error || 'Dữ liệu không hợp lệ';\n      alert(errorMessage);\n    } else if (status === 401) {\n      const errorMessage = data.error || 'Thông tin đăng nhập chưa chính xác';\n      alert(errorMessage);\n    } else if (status === 404) {\n      const errorMessage = data.error || 'Người dùng chưa đăng kí';\n      alert(errorMessage);\n    } else {\n      alert('Lỗi đăng nhập: ' + error.message);\n    }\n  } else {\n    alert('Lỗi đăng nhập: ' + error.message);\n  }\n}\n\n\n\nexport const login = async (\n  email: string,\n  password: string,\n  isChecked: boolean,\n  setLoading: (loading: boolean) => void, \n  navigation: any ,\n  user:object\n) => {\n  setLoading(true);\n\n  if (!email || !password) {\n    setLoading(false);\n    alert('Vui lòng điền đầy đủ thông tin.');\n    return;\n  }\n\n  try {\n\n    const response = await axios.post(userApiLogin, user);\n    const accessToken = response.data.accessToken;\n    const refreshToken = response.data.refreshToken;\n\n    if (accessToken && refreshToken) {\n      await saveTokensToStorage(accessToken, refreshToken);\n\n      if (isChecked === true) {\n        await saveLoginStatusToStorage('true');\n      }\n      const redirectTo = 'HomePage1'\n      await routeLogin(accessToken, navigation, redirectTo);\n\n    } else {\n      alert('Có lỗi xảy ra. Vui lòng thử lại');\n    }\n  } catch (error) {\n    handleLoginError(error);\n  }\n  finally{\n    setLoading(false)\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}