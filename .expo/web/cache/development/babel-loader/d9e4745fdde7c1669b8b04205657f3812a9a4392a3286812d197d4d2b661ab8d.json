{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport { userApiRegister } from \"../../api/UserAPI\";\nimport { validateEmail, validatePassword } from \"../../utils/Validate\";\nexport var register = function () {\n  var _ref = _asyncToGenerator(function* (name, email, password, confirmPassword, phone, setLoading, navigation, user) {\n    try {\n      setLoading(true);\n      validateUserInput(name, email, password, confirmPassword, phone);\n      yield createUser(user);\n      alert('Đăng ký thành công');\n      navigation.navigate('Login');\n    } catch (error) {\n      handleRegistrationError(error);\n    } finally {\n      setLoading(false);\n    }\n  });\n  return function register(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar validateUserInput = function validateUserInput(name, email, password, confirmPassword, phone) {\n  if (!name || !email || !password || !confirmPassword || !phone) {\n    throw new Error('Vui lòng điền đầy đủ thông tin.');\n  }\n  if (!validateEmail(email)) {\n    throw new Error('Email không hợp lệ. Vui lòng kiểm tra lại.');\n  }\n  if (!validatePassword(password)) {\n    throw new Error('Mật khẩu phải chứa ít nhất 6 ký tự.');\n  }\n  if (confirmPassword !== password) {\n    throw new Error('Nhập lại mật khẩu không khớp');\n  }\n};\nvar createUser = function () {\n  var _ref2 = _asyncToGenerator(function* (user) {\n    return yield axios.post(userApiRegister, user);\n  });\n  return function createUser(_x9) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar handleRegistrationError = function handleRegistrationError(error) {\n  if (error.response) {\n    var _error$response = error.response,\n      status = _error$response.status,\n      data = _error$response.data;\n    if (status === 400) {\n      alert('Lỗi khi đăng ký 400: ' + data.error);\n    } else if (status === 409) {\n      alert(data.error);\n    } else {\n      alert('Lỗi đăng ký : ' + error.message);\n    }\n  } else if (error.message === 'Network Error') {\n    alert('Không thể kết nối đến máy chủ.');\n  } else {\n    alert('Lỗi : ' + error.message);\n  }\n};","map":{"version":3,"names":["axios","userApiRegister","validateEmail","validatePassword","register","_ref","_asyncToGenerator","name","email","password","confirmPassword","phone","setLoading","navigation","user","validateUserInput","createUser","alert","navigate","error","handleRegistrationError","_x","_x2","_x3","_x4","_x5","_x6","_x7","_x8","apply","arguments","Error","_ref2","post","_x9","response","_error$response","status","data","message"],"sources":["/Users/chuduchung/Documents/doan-reactnative/react-native-app/react-native-food/services/userService.tsx/registerServices.tsx"],"sourcesContent":["import axios from 'axios';\nimport { userApiRegister } from '../../api/UserAPI';\nimport { validateEmail, validatePassword } from '../../utils/Validate';\n\nexport const register = async (\n    name:string,\n    email:string,\n    password:string,\n    confirmPassword:string,\n    phone:string,\n    setLoading: (loading: boolean) => void,\n    navigation:any,\n    user:object) => {\n\n    try {\n        setLoading(true);\n        validateUserInput(name, email, password, confirmPassword, phone);\n        await createUser(user);\n    \n        alert('Đăng ký thành công');\n        navigation.navigate('Login');\n        } \n    catch (error) {\n        handleRegistrationError(error);\n        } \n    finally {\n        setLoading(false);\n        }\n}\n\nconst validateUserInput = (\n    name:string,\n    email:string,\n    password:string,\n    confirmPassword:string,\n    phone:string,) => {\n        if (!name || !email || !password || !confirmPassword || !phone) {\n        throw new Error('Vui lòng điền đầy đủ thông tin.');\n        }\n        if (!validateEmail(email)) {\n        throw new Error('Email không hợp lệ. Vui lòng kiểm tra lại.');\n        }\n    \n        if (!validatePassword(password)) {\n            throw new Error('Mật khẩu phải chứa ít nhất 6 ký tự.');\n        }\n        \n        if (confirmPassword !== password) {\n        throw new Error('Nhập lại mật khẩu không khớp');\n        }\n    };\n    \n    const createUser = async (user:object) => {\n      return await axios.post(userApiRegister,  user );\n    };\n    \n    const handleRegistrationError = (error:any) => {\n      if (error.response) {\n        const { status, data } = error.response;\n        if (status === 400) {\n          alert('Lỗi khi đăng ký 400: ' + data.error);\n        } else if (status === 409) {\n          alert(data.error);\n        } else {\n          alert('Lỗi đăng ký : ' + error.message);\n        }\n      } else if (error.message === 'Network Error') {\n        // Xử lý lỗi mạng\n        alert('Không thể kết nối đến máy chủ.');\n      } else {\n        // Lỗi không xác định\n        alert('Lỗi : ' + error.message);\n      }\n    };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}