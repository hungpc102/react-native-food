{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport stylesB from \"../assets/css/stylesB\";\nimport { login } from \"../services/userService.tsx/loginFunctions\";\nimport { saveLogin } from \"../services/userService.tsx/saveLoginService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var user = {\n    \"USER_EMAIL\": email,\n    \"USER_PASSWORD\": password\n  };\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isChecked = _useState8[0],\n    setIsChecked = _useState8[1];\n  var checkmarkIcon = _jsx(Icon, {\n    name: \"check\",\n    size: 16,\n    color: \"#F24822\"\n  });\n  var toggleCheckbox = function toggleCheckbox() {\n    setIsChecked(!isChecked);\n  };\n  useEffect(function () {\n    saveLogin(setLoading, navigation);\n  }, []);\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      login(email, password, isChecked, setLoading, navigation, user);\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(KeyboardAvoidingView, {\n    behavior: \"height\",\n    style: [stylesB.container, {\n      justifyContent: 'center'\n    }],\n    children: [_jsx(View, {\n      style: styles.containerLogo,\n      children: _jsx(Image, {\n        style: styles.logo,\n        source: require(\"../assets/photoInScreens/FoodKart-login.jpg\")\n      })\n    }), _jsx(TextInput, {\n      value: email,\n      style: stylesB.textInput,\n      placeholder: \"T\\xE0i kho\\u1EA3n\",\n      placeholderTextColor: \"#888\",\n      autoCapitalize: \"none\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      value: password,\n      style: stylesB.textInput,\n      placeholder: \"M\\u1EADt kh\\u1EA9u\",\n      placeholderTextColor: \"#888\",\n      autoCapitalize: \"none\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    }) : _jsx(_Fragment, {\n      children: _jsx(TouchableOpacity, {\n        style: stylesB.containerButton,\n        onPress: handleLogin,\n        children: _jsx(Text, {\n          style: stylesB.actionButtonText,\n          children: \"\\u0110\\u0103ng nh\\u1EADp\"\n        })\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        marginTop: 20\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: toggleCheckbox,\n        style: styles.checkboxContainer,\n        children: _jsx(View, {\n          style: [styles.checkbox, isChecked ? styles.checked : styles.unchecked],\n          children: isChecked && _jsx(Text, {\n            children: checkmarkIcon\n          })\n        })\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Ghi nh\\u1EDB \\u0111\\u0103ng nh\\u1EADp?\"\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Ch\\u01B0a \\u0111\\u0103ng k\\xED? \\u0110\\u0103ng k\\xED t\\u1EA1i \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        },\n        children: _jsx(Text, {\n          style: stylesB.textDirectional,\n          children: \"\\u0111\\xE2y\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('HelpPage');\n      },\n      children: _jsx(Text, {\n        style: [styles.textHelp, stylesB.textDirectional],\n        children: \"C\\u1EA7n tr\\u1EE3 gi\\xFAp\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  containerLogo: {\n    marginBottom: -50\n  },\n  logo: {\n    width: 468,\n    height: 459\n  },\n  wrapper: {\n    marginTop: '-30%'\n  },\n  checkboxContainer: {\n    flexDirection: 'row'\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderWidth: 2,\n    borderColor: '#E6E6E6',\n    borderRadius: 10,\n    marginRight: 10\n  },\n  checked: {\n    marginTop: 2,\n    marginLeft: 3,\n    width: 20,\n    height: 20\n  },\n  unchecked: {\n    backgroundColor: '#E6E6E6',\n    marginTop: 2,\n    marginLeft: 3,\n    width: 20,\n    height: 20\n  },\n  label: {\n    fontSize: 18,\n    marginBottom: 10\n  },\n  textHelp: {\n    marginTop: 70\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","StyleSheet","Image","TouchableOpacity","ActivityIndicator","KeyboardAvoidingView","Icon","stylesB","login","saveLogin","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","user","_useState7","_useState8","isChecked","setIsChecked","checkmarkIcon","name","size","color","toggleCheckbox","handleLogin","_ref2","_asyncToGenerator","apply","arguments","behavior","style","container","justifyContent","children","styles","containerLogo","logo","source","require","value","textInput","placeholder","placeholderTextColor","autoCapitalize","onChangeText","text","secureTextEntry","containerButton","onPress","actionButtonText","flexDirection","marginTop","checkboxContainer","checkbox","checked","unchecked","label","navigate","textDirectional","textHelp","create","marginBottom","width","height","wrapper","borderWidth","borderColor","borderRadius","marginRight","marginLeft","backgroundColor","fontSize"],"sources":["/Users/chuduchung/Documents/doan-reactnative/react-native-app/react-native-food/screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { View, Text, TextInput, StyleSheet, Image, TouchableOpacity, ActivityIndicator, KeyboardAvoidingView} from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport stylesB from '../assets/css/stylesB'\nimport {Props } from '../services/interfaces/navigationTypes';\nimport {login} from '../services/userService.tsx/loginFunctions'\nimport { saveLogin } from '../services/userService.tsx/saveLoginService'\n\nconst LoginScreen = ({ navigation }: Props) => {\n  const [email, setEmail] = useState(''); \n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n  const user = {\n    \"USER_EMAIL\": email,\n    \"USER_PASSWORD\": password\n  }\n  \n  const [isChecked, setIsChecked] = useState(false);\n  const checkmarkIcon = <Icon name=\"check\" size={16} color=\"#F24822\" />;\n  const toggleCheckbox = () => {\n    setIsChecked(!isChecked);\n  };\n\n  useEffect(() => {\n    saveLogin(setLoading, navigation);\n  }, []);\n\n  const handleLogin = async () => {\n    login(email, password, isChecked, setLoading, navigation, user);\n  };\n\n  return (\n    <KeyboardAvoidingView behavior='height' style={[stylesB.container, {justifyContent:'center'}]}>\n      <View style={styles.containerLogo}>\n        <Image style={styles.logo} source={require('../assets/photoInScreens/FoodKart-login.jpg')} />\n      </View>\n        <TextInput value={email} style={stylesB.textInput} placeholder=\"Tài khoản\" placeholderTextColor=\"#888\" autoCapitalize='none' \n        onChangeText={(text) => setEmail(text)} />\n        <TextInput value={password} style={stylesB.textInput} placeholder=\"Mật khẩu\" placeholderTextColor=\"#888\"  autoCapitalize='none' secureTextEntry={true}\n        onChangeText={(text) => setPassword(text)} \n         />\n  \n      {loading ?(\n         <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      ) : (\n        <>\n          <TouchableOpacity  style={stylesB.containerButton} onPress={handleLogin}\n           >\n              <Text style={stylesB.actionButtonText}>Đăng nhập</Text>\n          \n          </TouchableOpacity>\n        </> \n      )}\n      <View style={{flexDirection:'row', marginTop:20}}>\n         <TouchableOpacity onPress={toggleCheckbox} style={styles.checkboxContainer}>\n      <View\n        style={[\n          styles.checkbox,\n          isChecked ? styles.checked : styles.unchecked,\n        ]}\n      >\n        {isChecked && (\n      <Text >{checkmarkIcon}</Text>\n      )}\n      </View>\n      </TouchableOpacity>\n      <Text style={styles.label}>Ghi nhớ đăng nhập?</Text>\n      </View>\n     \n      \n      <View style={{flexDirection:'row'}} >\n        <Text style={styles.label}>Chưa đăng kí? Đăng kí tại </Text>\n        <TouchableOpacity  onPress={() => navigation.navigate('Register')}>\n          <Text style={stylesB.textDirectional}>đây</Text>\n        </TouchableOpacity>\n      </View>\n      <TouchableOpacity onPress={() => navigation.navigate('HelpPage')}>\n        <Text style={[styles.textHelp,stylesB.textDirectional]} >Cần trợ giúp</Text>\n      </TouchableOpacity>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n\n    containerLogo:{\n      marginBottom:-50,\n    },\n    logo:{\n      width:468,\n      height:459,\n    },\n    wrapper:{\n      marginTop:'-30%'\n    },\n   \n    checkboxContainer: {\n      flexDirection: 'row',\n      // alignItems: 'center',\n    },\n    checkbox: {\n  \n      width: 20,\n      height: 20,\n      borderWidth: 2,\n      borderColor: '#E6E6E6',\n      borderRadius: 10,\n      marginRight: 10,\n\n    },\n    checked: {\n      marginTop: 2,\n      marginLeft: 3,\n      width: 20,\n      height: 20,\n    },\n    unchecked: {\n      backgroundColor:'#E6E6E6',\n      marginTop: 2,\n      marginLeft: 3,\n      width: 20,\n      height: 20,\n    },\n\n    label: {\n      fontSize: 18,\n      marginBottom:10\n    },\n    textHelp:{\n      marginTop:70\n    },\n   \n})\n\n\nexport default LoginScreen;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}