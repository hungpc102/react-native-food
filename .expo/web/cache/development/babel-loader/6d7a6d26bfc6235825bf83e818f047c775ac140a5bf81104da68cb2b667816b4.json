{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { getRefreshTokenFromStorage, saveTokensToStorage } from \"../../utils/TokenStorage\";\nimport axios from 'axios';\nimport { userApiRefreshToken } from \"../../api/UserAPI\";\nexport var handleTokenRefresh = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var refreshToken = yield getRefreshTokenFromStorage();\n      var response = yield axios.post(userApiRefreshToken, {\n        refreshToken: refreshToken\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var accessToken = response.data.accessToken;\n      var newRefreshToken = response.data.refreshToken;\n      console.log('accessToken:', accessToken);\n      console.log('refreshToken:', newRefreshToken);\n      if (accessToken && newRefreshToken) {\n        saveTokensToStorage(accessToken, newRefreshToken);\n        return {\n          accessToken: accessToken,\n          newRefreshToken: newRefreshToken\n        };\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  });\n  return function handleTokenRefresh() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["getRefreshTokenFromStorage","saveTokensToStorage","axios","userApiRefreshToken","handleTokenRefresh","_ref","_asyncToGenerator","refreshToken","response","post","headers","accessToken","data","newRefreshToken","console","log","error","message","apply","arguments"],"sources":["/Users/chuduchung/Documents/doan-reactnative/react-native-app/react-native-food/services/jwtService/jwtServices.tsx"],"sourcesContent":["import {getRefreshTokenFromStorage, saveTokensToStorage} from '../../utils/TokenStorage'\nimport axios from 'axios';\nimport {userApiRefreshToken, apiProtectedRoute} from '../../api/UserAPI'\nexport const handleTokenRefresh = async () => {\n    try {\n     const refreshToken = await getRefreshTokenFromStorage();\n      const response = await axios.post(userApiRefreshToken, {\n        refreshToken: refreshToken,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      const accessToken = response.data.accessToken;\n      const newRefreshToken = response.data.refreshToken;\n  \n      console.log('accessToken:', accessToken);\n      console.log('refreshToken:', newRefreshToken);\n\n  \n      if (accessToken && newRefreshToken) {\n        saveTokensToStorage(accessToken, newRefreshToken);\n        return {accessToken, newRefreshToken}\n      }\n    } catch (error:any) {\n        console.log(error.message)\n    }\n}\n\n  "],"mappings":";AAAA,SAAQA,0BAA0B,EAAEC,mBAAmB;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,mBAAmB;AAC3B,OAAO,IAAMC,kBAAkB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC1C,IAAI;MACH,IAAMC,YAAY,SAASP,0BAA0B,CAAC,CAAC;MACtD,IAAMQ,QAAQ,SAASN,KAAK,CAACO,IAAI,CAACN,mBAAmB,EAAE;QACrDI,YAAY,EAAEA;MAChB,CAAC,EAAE;QACDG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAMC,WAAW,GAAGH,QAAQ,CAACI,IAAI,CAACD,WAAW;MAC7C,IAAME,eAAe,GAAGL,QAAQ,CAACI,IAAI,CAACL,YAAY;MAElDO,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,WAAW,CAAC;MACxCG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,eAAe,CAAC;MAG7C,IAAIF,WAAW,IAAIE,eAAe,EAAE;QAClCZ,mBAAmB,CAACU,WAAW,EAAEE,eAAe,CAAC;QACjD,OAAO;UAACF,WAAW,EAAXA,WAAW;UAAEE,eAAe,EAAfA;QAAe,CAAC;MACvC;IACF,CAAC,CAAC,OAAOG,KAAS,EAAE;MAChBF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;IAC9B;EACJ,CAAC;EAAA,gBAzBYb,kBAAkBA,CAAA;IAAA,OAAAC,IAAA,CAAAa,KAAA,OAAAC,SAAA;EAAA;AAAA,GAyB9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}