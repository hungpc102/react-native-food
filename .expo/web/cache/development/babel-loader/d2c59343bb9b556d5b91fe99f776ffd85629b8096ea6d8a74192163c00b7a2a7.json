{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport stylesB from \"../assets/css/stylesB\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { apiSearchFood } from \"../connect_API/FoodAPI\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SearchScreen = function SearchScreen(_ref) {\n  var navigation = _ref.navigation;\n  var Separator = function Separator() {\n    return _jsx(View, {\n      style: styles.separator\n    });\n  };\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    categoryDatas = _useState2[0],\n    setCategoryDatas = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    imageData = _useState4[0],\n    setImageData = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    searchText = _useState6[0],\n    setSearchText = _useState6[1];\n  var inputRef = useRef(null);\n  useEffect(function () {\n    axios.get(apiSearchFood + `?search=${searchText}`).then(function (response) {\n      var data = response.data;\n      var foods = data.foods;\n      setCategoryDatas(foods);\n      var foodName = foods.map(function (food) {\n        return food.FOOD_NAME;\n      });\n      var images = foods.map(function (food) {\n        return food.FOOD_PICTURE;\n      });\n      setImageData(images);\n    }).catch(function (error) {});\n  }, [searchText]);\n  var handleDetail = function handleDetail(foodId) {\n    navigation.navigate('FoodDetail', {\n      foodId: foodId\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.swapSearch,\n      children: _jsxs(View, {\n        style: stylesB.containerSearch,\n        children: [_jsx(TextInput, {\n          style: stylesB.inputSearch,\n          autoFocus: true,\n          ref: inputRef,\n          onChangeText: function onChangeText(text) {\n            return setSearchText(text);\n          },\n          placeholder: \"T\\xECm m\\xF3n \\u0103n\",\n          autoCapitalize: \"none\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            var _inputRef$current;\n            return (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.blur();\n          },\n          children: _jsx(Icon, {\n            style: stylesB.iconSearch,\n            name: \"search\",\n            size: 30\n          })\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.listFood,\n      children: _jsx(FlatList, {\n        data: categoryDatas,\n        keyExtractor: function keyExtractor(item) {\n          return item.FOOD_ID.toString();\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsxs(TouchableOpacity, {\n            style: styles.item,\n            onPress: function onPress() {\n              return handleDetail(item.FOOD_ID);\n            },\n            children: [_jsx(Image, {\n              source: {\n                uri: `data:image/jpeg;base64,${item.FOOD_PICTURE}`\n              },\n              style: styles.image\n            }), _jsx(Text, {\n              style: styles.textName,\n              children: item.FOOD_NAME\n            })]\n          });\n        },\n        ItemSeparatorComponent: Separator\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginLeft: 30,\n    marginRight: 30,\n    flex: 1,\n    height: 3000\n  },\n  swapSearch: {\n    width: '100%',\n    alignItems: 'center'\n  },\n  listFood: {\n    paddingBottom: 140\n  },\n  item: {\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 5\n  },\n  image: {\n    width: 80,\n    height: 80,\n    borderRadius: 20,\n    margin: 6,\n    marginRight: 14,\n    borderColor: '#CCCCCC',\n    borderWidth: 1\n  },\n  textName: {\n    fontSize: 22,\n    fontWeight: '500'\n  },\n  separator: {\n    height: 1,\n    backgroundColor: 'gray'\n  }\n});\nexport default SearchScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","StyleSheet","TouchableOpacity","Image","TextInput","FlatList","stylesB","Icon","apiSearchFood","axios","jsx","_jsx","jsxs","_jsxs","SearchScreen","_ref","navigation","Separator","style","styles","separator","_useState","_useState2","_slicedToArray","categoryDatas","setCategoryDatas","_useState3","_useState4","imageData","setImageData","_useState5","_useState6","searchText","setSearchText","inputRef","get","then","response","data","foods","foodName","map","food","FOOD_NAME","images","FOOD_PICTURE","catch","error","handleDetail","foodId","navigate","container","children","swapSearch","containerSearch","inputSearch","autoFocus","ref","onChangeText","text","placeholder","autoCapitalize","onPress","_inputRef$current","current","blur","iconSearch","name","size","listFood","keyExtractor","item","FOOD_ID","toString","renderItem","_ref2","source","uri","image","textName","ItemSeparatorComponent","create","marginLeft","marginRight","flex","height","width","alignItems","paddingBottom","flexDirection","margin","borderRadius","borderColor","borderWidth","fontSize","fontWeight","backgroundColor"],"sources":["/Users/chuduchung/Documents/doan-reactnative/react-native-app/react-native-food/screens/SearchPage.tsx"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity,Image,TextInput,FlatList } from 'react-native';\nimport stylesB from '../assets/css/stylesB'\nimport { Props } from '../services/interfaces/navigationTypes';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { apiSearchFood} from '../connect_API/FoodAPI'\nimport axios from 'axios';\n\n\nconst SearchScreen = ({ navigation }: Props) => {\n    \n\n      const Separator = () => <View style={styles.separator} />;\n      const [categoryDatas, setCategoryDatas] = useState<any[]>([])\n      const [imageData, setImageData] = useState<any[]>([])\n      const [searchText, setSearchText] = useState('')\n      const inputRef = useRef<TextInput>(null);\n\n\n      useEffect(() => {\n       \n          axios.get(apiSearchFood + `?search=${searchText}`)\n          .then((response) => {\n            const data: any = response.data;\n            const foods: any[] = data.foods;\n            setCategoryDatas(foods);\n            const foodName = foods.map((food) => food.FOOD_NAME);\n            const images = foods.map((food) => food.FOOD_PICTURE);\n            setImageData(images);\n          })\n          .catch((error) => {\n            // console.error('Lỗi khi lấy dữ liệu từ API:', error);\n          });\n\n      }, [searchText ]);\n        \n      const handleDetail = (foodId:number) => {\n        navigation.navigate('FoodDetail', { foodId })\n      }\n\n    return(\n        <View style={styles.container}>\n            <View style={styles.swapSearch}>\n                <View style={stylesB.containerSearch}>\n                    <TextInput  style={ stylesB.inputSearch}   autoFocus={true} ref={inputRef}\n                    onChangeText={(text) => setSearchText(text)}\n                     placeholder=\"Tìm món ăn\" autoCapitalize='none'/>\n                    <TouchableOpacity onPress={() => inputRef.current?.blur()} >\n                        <Icon style={stylesB.iconSearch} name=\"search\" size={30}/>\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <View style={styles.listFood}>\n                  <FlatList\n                    data={categoryDatas}\n                    keyExtractor={(item) => item.FOOD_ID.toString()} // Sử dụng FOOD_ID làm key\n                    renderItem={({ item }) => (\n                        <TouchableOpacity style={styles.item} onPress={() => handleDetail(item.FOOD_ID)}>\n                        {/* Sử dụng đường dẫn hình ảnh từ dữ liệu */}\n                        <Image source={{ uri: `data:image/jpeg;base64,${item.FOOD_PICTURE}` }} style={styles.image} />\n                        <Text style={styles.textName}>{item.FOOD_NAME}</Text>\n                        </TouchableOpacity>\n                    )}\n                    ItemSeparatorComponent={Separator}\n                  />\n            </View>\n          \n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container:{\n        marginLeft:30,\n        marginRight:30,\n        flex:1,\n        height: 3000\n    },\n    swapSearch:{\n        width:'100%',\n        alignItems:'center'\n    },\n    listFood:{\n        paddingBottom:140\n    },\n    item:{\n        width: '100%', \n        flexDirection:'row',\n        alignItems: 'center',\n        margin:5,\n    },\n    image:{\n        width: 80,\n        height: 80,\n        borderRadius:20,\n        margin: 6,\n        marginRight:14,\n        borderColor:'#CCCCCC',\n        borderWidth:1\n    },\n    textName:{\n        fontSize: 22,\n        fontWeight:'500'\n    },\n    separator: {\n        height: 1,\n        backgroundColor: 'gray', // Màu của dòng kẻ ngang\n      },\n})\n\nexport default SearchScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}