{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport stylesB from \"../assets/css/stylesB\";\nimport { signUp } from \"../services/Auth\";\nimport { validateEmail, validatePassword } from \"../utils/Validate\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var handleSignUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        if (!validateEmail(email)) {\n          Alert.alert('Lỗi', 'Địa chỉ email không hợp lệ.');\n          setLoading(false);\n          return;\n        }\n        if (!validatePassword(password)) {\n          Alert.alert('Lỗi', 'Mật khẩu phải lớn hơn 5 kí tự.');\n          setLoading(false);\n          return;\n        }\n        if (confirmPassword != password) {\n          Alert.alert('Lỗi', 'Mật khẩu không khớp.');\n          setLoading(false);\n          return;\n        }\n        var user = yield signUp(email, password);\n        navigation.navigate('Login');\n      } catch (error) {\n        alert('Đăng kí thất bại');\n      } finally {\n        setLoading(false);\n      }\n      ;\n    });\n    return function handleSignUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: stylesB.container,\n    children: [_jsx(Text, {\n      style: styles.trademark,\n      children: \"FOODKART\"\n    }), _jsx(Text, {\n      style: styles.textTitle,\n      children: \"Nh\\u1EEFng m\\xF3n \\u0103n ngon \\u0111ang \\u0111\\u1EE3i b\\u1EA1n!\"\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: \"height\",\n      children: [_jsx(TextInput, {\n        style: stylesB.textInput,\n        placeholder: \"H\\u1ECD v\\xE0 t\\xEAn\"\n      }), _jsx(TextInput, {\n        value: email,\n        style: stylesB.textInput,\n        placeholder: \"Email\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TextInput, {\n        value: password,\n        style: stylesB.textInput,\n        placeholder: \"M\\u1EADt kh\\u1EA9u\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(TextInput, {\n        value: confirmPassword,\n        style: stylesB.textInput,\n        placeholder: \"Nh\\u1EADp l\\u1EA1i m\\u1EADt kh\\u1EA9u\",\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(text) {\n          return setConfirmPassword(text);\n        }\n      }), _jsx(TextInput, {\n        style: stylesB.textInput,\n        placeholder: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"\n      })]\n    }), loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    }) : _jsx(_Fragment, {\n      children: _jsx(TouchableOpacity, {\n        style: stylesB.containerButton,\n        onPress: handleSignUp,\n        children: _jsx(Text, {\n          style: stylesB.actionButtonText,\n          children: \"\\u0110\\u0103ng k\\xED\"\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('HelpPage');\n      },\n      children: _jsx(Text, {\n        style: [stylesB.textDirectional, {\n          marginTop: 50\n        }],\n        children: \"Li\\xEAn h\\u1EC7 \\u0111\\u1EC3 bi\\u1EBFt th\\xEAm\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  trademark: {\n    color: '#F24822',\n    fontSize: 50,\n    fontWeight: '900',\n    marginTop: '20%',\n    marginBottom: 30\n  },\n  textTitle: {\n    fontSize: 18,\n    marginBottom: 50\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","StyleSheet","TouchableOpacity","ActivityIndicator","Alert","KeyboardAvoidingView","stylesB","signUp","validateEmail","validatePassword","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","loading","setLoading","handleSignUp","_ref2","_asyncToGenerator","alert","user","navigate","error","apply","arguments","style","container","children","styles","trademark","textTitle","behavior","textInput","placeholder","value","autoCapitalize","onChangeText","text","secureTextEntry","size","color","containerButton","onPress","actionButtonText","textDirectional","marginTop","create","fontSize","fontWeight","marginBottom"],"sources":["/Users/chuduchung/Documents/doan-reactnative/react-native-app/react-native-food/screens/RegisterScreen.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, ActivityIndicator,Alert ,KeyboardAvoidingView} from 'react-native';\nimport stylesB from '../assets/css/stylesB'\nimport { signUp } from '../services/Auth';\nimport { validateEmail, validatePassword }from '../utils/Validate';\nimport {Props } from '../services/interfaces/navigationTypes';\n\nconst RegisterScreen = ({ navigation }: Props) => {\n  const [email, setEmail] = useState(''); // Khởi tạo state cho email\n  const [password, setPassword] = useState(''); // Khởi tạo state cho password\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [loading, setLoading] = useState(false);\n  \n\n  const handleSignUp = async () => {\n    setLoading(true)\n    try {\n      if (!validateEmail(email)) {\n        // Kiểm tra địa chỉ email bằng hàm validateEmail\n        Alert.alert('Lỗi', 'Địa chỉ email không hợp lệ.');\n        setLoading(false);\n        return;\n      }\n      if(!validatePassword(password)){\n        Alert.alert('Lỗi', 'Mật khẩu phải lớn hơn 5 kí tự.');\n        setLoading(false);\n        return;\n      }\n      if(confirmPassword != password){\n        Alert.alert('Lỗi', 'Mật khẩu không khớp.')\n        setLoading(false);\n        return;\n      }\n\n      const user = await signUp(email , password);\n      // Xử lý sau khi đăng nhập thành công, ví dụ: điều hướng đến màn hình khác\n      navigation.navigate('Login')\n    } catch (error) {\n      // Xử lý lỗi đăng nhập\n      alert('Đăng kí thất bại')\n    }finally{\n      setLoading(false)\n    };\n  }\n\n  return (\n    <View  style={stylesB.container}>\n      <Text style={styles.trademark}>FOODKART</Text>\n      <Text style={styles.textTitle}>Những món ăn ngon đang đợi bạn!</Text>\n      <KeyboardAvoidingView behavior='height'>\n        <TextInput style={stylesB.textInput} placeholder=\"Họ và tên\" />\n        <TextInput value={email} style={stylesB.textInput} placeholder=\"Email\" autoCapitalize='none' \n          onChangeText={(text) => setEmail(text)} />\n        <TextInput value={password} style={stylesB.textInput} placeholder=\"Mật khẩu\" secureTextEntry={true} autoCapitalize='none' \n          onChangeText={(text) => setPassword(text)} />\n        <TextInput value={confirmPassword} style={stylesB.textInput} placeholder=\"Nhập lại mật khẩu\" secureTextEntry={true} autoCapitalize='none' \n          onChangeText={(text) => setConfirmPassword(text)}/>\n        <TextInput style={stylesB.textInput} placeholder=\"Số điện thoại\" />\n      </KeyboardAvoidingView>\n      \n      {loading ?(\n         <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      ) : (\n        <>\n          <TouchableOpacity style={stylesB.containerButton} onPress={handleSignUp}>\n          <Text style={stylesB.actionButtonText}>Đăng kí</Text>\n          </TouchableOpacity>\n        </> \n      )}\n      \n      <TouchableOpacity onPress={() => navigation.navigate('HelpPage')}>\n        <Text style={[stylesB.textDirectional, {marginTop:50}]}>Liên hệ để biết thêm</Text>\n      </TouchableOpacity>\n      \n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  trademark:{\n    color:'#F24822',\n    fontSize:50,\n    fontWeight:'900',\n    marginTop:'20%',\n    marginBottom:30\n  },\n  textTitle:{\n    fontSize:18,\n    marginBottom:50\n  }\n})\nexport default RegisterScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}